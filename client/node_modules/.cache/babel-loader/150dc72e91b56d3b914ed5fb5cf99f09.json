{"ast":null,"code":"import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nimport { unstable_resetCreateSelectorCache } from '../../utils/createSelector';\n\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\n\nlet globalId = 0;\n\nconst wrapPublicApi = publicApi => {\n  const privateOnlyApi = {};\n\n  privateOnlyApi.getPublicApi = () => publicApi;\n\n  privateOnlyApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      if (visibility === 'public') {\n        publicApi[methodName] = methods[methodName];\n      } else {\n        privateOnlyApi[methodName] = methods[methodName];\n      }\n    });\n  };\n\n  const handler = {\n    get: (obj, prop) => {\n      if (prop in obj) {\n        return obj[prop];\n      }\n\n      return privateOnlyApi[prop];\n    },\n    set: (obj, prop, value) => {\n      obj[prop] = value;\n      return true;\n    }\n  };\n  return new Proxy(publicApi, handler);\n};\n\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n\n  if (!publicApiRef.current) {\n    publicApiRef.current = {\n      state: {},\n      instanceId: globalId\n    };\n    globalId += 1;\n  }\n\n  const privateApiRef = React.useRef();\n\n  if (!privateApiRef.current) {\n    privateApiRef.current = wrapPublicApi(publicApiRef.current);\n    privateApiRef.current.register('private', {\n      caches: {},\n      eventManager: new EventManager()\n    });\n  }\n\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  const publishEvent = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      unstable_resetCreateSelectorCache(api.instanceId);\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","map":{"version":3,"names":["React","useGridApiMethod","GridSignature","EventManager","unstable_resetCreateSelectorCache","isSyntheticEvent","event","isPropagationStopped","undefined","globalId","wrapPublicApi","publicApi","privateOnlyApi","getPublicApi","register","visibility","methods","Object","keys","forEach","methodName","handler","get","obj","prop","set","value","Proxy","useGridApiInitialization","inputApiRef","props","publicApiRef","useRef","current","state","instanceId","privateApiRef","caches","eventManager","useImperativeHandle","publishEvent","useCallback","args","name","params","defaultMuiPrevented","details","signature","DataGridPro","api","emit","subscribeEvent","options","on","removeListener","useEffect"],"sources":["/home/fahiz/Brocamp Works/BASIC-CRUD_PROJECT-MERN/client/node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js"],"sourcesContent":["import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nimport { unstable_resetCreateSelectorCache } from '../../utils/createSelector';\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nlet globalId = 0;\nconst wrapPublicApi = publicApi => {\n  const privateOnlyApi = {};\n  privateOnlyApi.getPublicApi = () => publicApi;\n  privateOnlyApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      if (visibility === 'public') {\n        publicApi[methodName] = methods[methodName];\n      } else {\n        privateOnlyApi[methodName] = methods[methodName];\n      }\n    });\n  };\n  const handler = {\n    get: (obj, prop) => {\n      if (prop in obj) {\n        return obj[prop];\n      }\n      return privateOnlyApi[prop];\n    },\n    set: (obj, prop, value) => {\n      obj[prop] = value;\n      return true;\n    }\n  };\n  return new Proxy(publicApi, handler);\n};\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  if (!publicApiRef.current) {\n    publicApiRef.current = {\n      state: {},\n      instanceId: globalId\n    };\n    globalId += 1;\n  }\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = wrapPublicApi(publicApiRef.current);\n    privateApiRef.current.register('private', {\n      caches: {},\n      eventManager: new EventManager()\n    });\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      unstable_resetCreateSelectorCache(api.instanceId);\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}