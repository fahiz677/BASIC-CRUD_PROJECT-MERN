{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\n\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\n\n\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]); // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns) => new Promise(resolve => {\n    // TODO remove unused Promise\n    if (!fields && !allColumns) {\n      resolve();\n      return;\n    }\n\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _querySelector, _querySelector2;\n\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options);\n\n    const printDoc = printWindow.contentDocument;\n\n    if (!printDoc) {\n      return;\n    }\n\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true); // Allow to overflow to not hide the border of the last row\n\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible'; // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n\n    gridClone.style.contain = 'size';\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.offsetHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.offsetHeight) || 0;\n\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    } // Expand container height to accommodate all rows\n\n\n    gridClone.style.height = `${rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props.columnHeaderHeight) + gridToolbarElementHeight + gridFooterElementHeight}px`; // The height above does not include grid border width, so we need to exclude it\n\n    gridClone.style.boxSizing = 'content-box'; // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n\n    if (normalizeOptions.copyStyles) {\n      const headStyleElements = doc.current.querySelectorAll(\"style, link[rel='stylesheet']\");\n\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n\n          if (sheet) {\n            let styleCSS = ''; // NOTE: for-of is not supported by IE\n\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    } // Trigger print\n\n\n    if (process.env.NODE_ENV !== 'test') {\n      printWindow.contentWindow.print();\n    }\n  }, [apiRef, doc, props.columnHeaderHeight]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu, _previousGridState$cu2; // Remove the print iframe\n\n\n    doc.current.body.removeChild(printWindow); // Revert grid to previous state\n\n    apiRef.current.restoreState(previousGridState.current || {});\n\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu2 = _previousGridState$cu.columns) != null && _previousGridState$cu2.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n\n    apiRef.current.unstable_enableVirtualization(); // Clear local state\n\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n\n    previousGridState.current = apiRef.current.exportState(); // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      apiRef.current.setPageSize(visibleRowCount);\n    }\n\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n    apiRef.current.unstable_disableVirtualization();\n    await raf(); // wait for the state changes to take action\n\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow); // In test env, run the all pipeline without waiting for loading\n\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","map":{"version":3,"names":["_extends","React","unstable_ownerDocument","ownerDocument","useGridLogger","gridExpandedRowCountSelector","gridColumnDefinitionsSelector","gridColumnVisibilityModelSelector","gridClasses","useGridApiMethod","gridRowsMetaSelector","getColumnsToExport","useGridRegisterPipeProcessor","GridPrintExportMenuItem","getTotalHeaderHeight","jsx","_jsx","raf","Promise","resolve","requestAnimationFrame","buildPrintWindow","title","iframeEl","document","createElement","style","position","width","height","useGridPrintExport","apiRef","props","logger","doc","useRef","previousGridState","previousColumnVisibility","useEffect","current","rootElementRef","updateGridColumnsForPrint","useCallback","fields","allColumns","exportedColumnFields","options","map","column","field","columns","newColumnVisibilityModel","forEach","includes","setColumnVisibilityModel","handlePrintWindowLoad","printWindow","_querySelector","_querySelector2","normalizeOptions","copyStyles","hideToolbar","hideFooter","printDoc","contentDocument","rowsMeta","state","gridRootElement","gridClone","cloneNode","gridMain","querySelector","main","overflow","contain","columnHeaders","columnHeadersInner","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","_gridClone$querySelec","remove","_gridClone$querySelec2","currentPageTotalHeight","columnHeaderHeight","boxSizing","container","appendChild","body","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","add","split","headStyleElements","querySelectorAll","i","length","node","tagName","newHeadStyleElements","sheet","styleCSS","j","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","process","env","NODE_ENV","contentWindow","print","handlePrintWindowAfterPrint","_previousGridState$cu","_previousGridState$cu2","removeChild","restoreState","columnVisibilityModel","unstable_enableVirtualization","exportDataAsPrint","debug","Error","exportState","pagination","visibleRowCount","setPageSize","unstable_disableVirtualization","fileName","onload","mediaQueryList","matchMedia","addEventListener","mql","isAfterPrint","matches","printExportApi","addExportMenuButtons","initialValue","_options$printOptions","printOptions","disableToolbarButton","component","componentName"],"sources":["/home/fahiz/Brocamp Works/BASIC-CRUD_PROJECT-MERN/client/node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns) => new Promise(resolve => {\n    // TODO remove unused Promise\n    if (!fields && !allColumns) {\n      resolve();\n      return;\n    }\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _querySelector, _querySelector2;\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.offsetHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.offsetHeight) || 0;\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    gridClone.style.height = `${rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props.columnHeaderHeight) + gridToolbarElementHeight + gridFooterElementHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    if (normalizeOptions.copyStyles) {\n      const headStyleElements = doc.current.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      printWindow.contentWindow.print();\n    }\n  }, [apiRef, doc, props.columnHeaderHeight]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu, _previousGridState$cu2;\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu2 = _previousGridState$cu.columns) != null && _previousGridState$cu2.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.unstable_enableVirtualization();\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      apiRef.current.setPageSize(visibleRowCount);\n    }\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n    apiRef.current.unstable_disableVirtualization();\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}