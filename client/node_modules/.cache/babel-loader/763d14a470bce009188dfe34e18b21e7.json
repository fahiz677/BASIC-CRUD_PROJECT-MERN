{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","map":{"version":3,"names":["React","PropTypes","MenuItem","ListItemIcon","ListItemText","GridPreferencePanelsValue","useGridApiContext","useGridRootProps","jsx","_jsx","jsxs","_jsxs","GridColumnMenuManageItem","props","onClick","apiRef","rootProps","showColumns","useCallback","event","current","showPreferences","columns","disableColumnSelector","children","slots","columnMenuManageColumnsIcon","fontSize","getLocaleText","process","env","NODE_ENV","propTypes","colDef","object","isRequired","func"],"sources":["/home/fahiz/Brocamp Works/BASIC-CRUD_PROJECT-MERN/client/node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,yBAAT,QAA0C,uEAA1C;AACA,SAASC,iBAAT,QAAkC,2CAAlC;AACA,SAASC,gBAAT,QAAiC,0CAAjC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AACA,SAASC,wBAAT,CAAkCC,KAAlC,EAAyC;EACvC,MAAM;IACJC;EADI,IAEFD,KAFJ;EAGA,MAAME,MAAM,GAAGT,iBAAiB,EAAhC;EACA,MAAMU,SAAS,GAAGT,gBAAgB,EAAlC;EACA,MAAMU,WAAW,GAAGjB,KAAK,CAACkB,WAAN,CAAkBC,KAAK,IAAI;IAC7CL,OAAO,CAACK,KAAD,CAAP,CAD6C,CAC7B;;IAChBJ,MAAM,CAACK,OAAP,CAAeC,eAAf,CAA+BhB,yBAAyB,CAACiB,OAAzD;EACD,CAHmB,EAGjB,CAACP,MAAD,EAASD,OAAT,CAHiB,CAApB;;EAIA,IAAIE,SAAS,CAACO,qBAAd,EAAqC;IACnC,OAAO,IAAP;EACD;;EACD,OAAO,aAAaZ,KAAK,CAACT,QAAD,EAAW;IAClCY,OAAO,EAAEG,WADyB;IAElCO,QAAQ,EAAE,CAAC,aAAaf,IAAI,CAACN,YAAD,EAAe;MACzCqB,QAAQ,EAAE,aAAaf,IAAI,CAACO,SAAS,CAACS,KAAV,CAAgBC,2BAAjB,EAA8C;QACvEC,QAAQ,EAAE;MAD6D,CAA9C;IADc,CAAf,CAAlB,EAIN,aAAalB,IAAI,CAACL,YAAD,EAAe;MAClCoB,QAAQ,EAAET,MAAM,CAACK,OAAP,CAAeQ,aAAf,CAA6B,yBAA7B;IADwB,CAAf,CAJX;EAFwB,CAAX,CAAzB;AAUD;;AACDC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCnB,wBAAwB,CAACoB,SAAzB,GAAqC;EAC3E;EACA;EACA;EACA;EACAC,MAAM,EAAEhC,SAAS,CAACiC,MAAV,CAAiBC,UALkD;EAM3ErB,OAAO,EAAEb,SAAS,CAACmC,IAAV,CAAeD;AANmD,CAA7E,GAOI,KAAK,CAPT;AAQA,SAASvB,wBAAT"},"metadata":{},"sourceType":"module"}