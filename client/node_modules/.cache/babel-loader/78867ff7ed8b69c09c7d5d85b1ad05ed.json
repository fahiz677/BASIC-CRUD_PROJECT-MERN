{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true); // do not allow to hide the last column with menu\n\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  if (colDef.hideable === false) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","map":{"version":3,"names":["React","PropTypes","MenuItem","ListItemIcon","ListItemText","useGridApiContext","useGridRootProps","gridVisibleColumnDefinitionsSelector","jsx","_jsx","jsxs","_jsxs","GridColumnMenuHideItem","props","colDef","onClick","apiRef","rootProps","visibleColumns","columnsWithMenu","filter","col","disableColumnMenu","disabled","length","toggleColumn","useCallback","event","current","setColumnVisibility","field","disableColumnSelector","hideable","children","slots","columnMenuHideIcon","fontSize","getLocaleText","process","env","NODE_ENV","propTypes","object","isRequired","func"],"sources":["/home/fahiz/Brocamp Works/BASIC-CRUD_PROJECT-MERN/client/node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,iBAAT,QAAkC,2CAAlC;AACA,SAASC,gBAAT,QAAiC,0CAAjC;AACA,SAASC,oCAAT,QAAqD,oCAArD;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AACA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;EACrC,MAAM;IACJC,MADI;IAEJC;EAFI,IAGFF,KAHJ;EAIA,MAAMG,MAAM,GAAGX,iBAAiB,EAAhC;EACA,MAAMY,SAAS,GAAGX,gBAAgB,EAAlC;EACA,MAAMY,cAAc,GAAGX,oCAAoC,CAACS,MAAD,CAA3D;EACA,MAAMG,eAAe,GAAGD,cAAc,CAACE,MAAf,CAAsBC,GAAG,IAAIA,GAAG,CAACC,iBAAJ,KAA0B,IAAvD,CAAxB,CARqC,CASrC;;EACA,MAAMC,QAAQ,GAAGJ,eAAe,CAACK,MAAhB,KAA2B,CAA5C;EACA,MAAMC,YAAY,GAAGzB,KAAK,CAAC0B,WAAN,CAAkBC,KAAK,IAAI;IAC9C;AACJ;AACA;AACA;AACA;IACI,IAAIJ,QAAJ,EAAc;MACZ;IACD;;IACDP,MAAM,CAACY,OAAP,CAAeC,mBAAf,CAAmCf,MAAM,CAACgB,KAA1C,EAAiD,KAAjD;IACAf,OAAO,CAACY,KAAD,CAAP;EACD,CAXoB,EAWlB,CAACX,MAAD,EAASF,MAAM,CAACgB,KAAhB,EAAuBf,OAAvB,EAAgCQ,QAAhC,CAXkB,CAArB;;EAYA,IAAIN,SAAS,CAACc,qBAAd,EAAqC;IACnC,OAAO,IAAP;EACD;;EACD,IAAIjB,MAAM,CAACkB,QAAP,KAAoB,KAAxB,EAA+B;IAC7B,OAAO,IAAP;EACD;;EACD,OAAO,aAAarB,KAAK,CAACT,QAAD,EAAW;IAClCa,OAAO,EAAEU,YADyB;IAElCF,QAAQ,EAAEA,QAFwB;IAGlCU,QAAQ,EAAE,CAAC,aAAaxB,IAAI,CAACN,YAAD,EAAe;MACzC8B,QAAQ,EAAE,aAAaxB,IAAI,CAACQ,SAAS,CAACiB,KAAV,CAAgBC,kBAAjB,EAAqC;QAC9DC,QAAQ,EAAE;MADoD,CAArC;IADc,CAAf,CAAlB,EAIN,aAAa3B,IAAI,CAACL,YAAD,EAAe;MAClC6B,QAAQ,EAAEjB,MAAM,CAACY,OAAP,CAAeS,aAAf,CAA6B,sBAA7B;IADwB,CAAf,CAJX;EAHwB,CAAX,CAAzB;AAWD;;AACDC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC5B,sBAAsB,CAAC6B,SAAvB,GAAmC;EACzE;EACA;EACA;EACA;EACA3B,MAAM,EAAEb,SAAS,CAACyC,MAAV,CAAiBC,UALgD;EAMzE5B,OAAO,EAAEd,SAAS,CAAC2C,IAAV,CAAeD;AANiD,CAA3E,GAOI,KAAK,CAPT;AAQA,SAAS/B,sBAAT"},"metadata":{},"sourceType":"module"}