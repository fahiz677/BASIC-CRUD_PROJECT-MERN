{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { styled, useTheme } from '@mui/system';\nimport { defaultMemoize } from 'reselect';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender, getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\n\nfunction isUIEvent(event) {\n  return !!event.target;\n}\n\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const theme = useTheme();\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]); // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - direction * columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer, theme.direction]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback((_ref, event) => {\n    let {\n      left,\n      renderContext: nextRenderContext = null\n    } = _ref;\n\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n\n    if (!innerRef.current) {\n      return;\n    } // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n\n\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n\n    prevScrollLeft.current = left; // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n\n    let canUpdateInnerPosition = false;\n\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    } // Pass directly the render context to avoid waiting for the next render\n\n\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScroll); // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n\n    if (!nextRenderContext) {\n      return null;\n    }\n\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n\n  const getColumnHeaders = function (params) {\n    let other = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const columnsToRender = getColumnsToRender(params);\n\n    if (columnsToRender == null) {\n      return null;\n    }\n\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), colDef.field));\n    }\n\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n\n    const columnsToRender = getColumnsToRender(params);\n\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _apiRef$current$unsta, _apiRef$current$unsta2;\n\n      const rowStructure = columnGroupsHeaderStructure[depth];\n      const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n      const firstGroupToRender = (_apiRef$current$unsta = apiRef.current.unstable_getColumnGroupPath(firstColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta : null;\n      const firstGroupIndex = rowStructure.findIndex(_ref2 => {\n        let {\n          groupId,\n          columnFields\n        } = _ref2;\n        return groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender);\n      });\n      const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n      const lastGroupToRender = (_apiRef$current$unsta2 = apiRef.current.unstable_getColumnGroupPath(lastColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta2 : null;\n      const lastGroupIndex = rowStructure.findIndex(_ref3 => {\n        let {\n          groupId,\n          columnFields\n        } = _ref3;\n        return groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender);\n      });\n      const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n        return _extends({}, groupStructure, {\n          columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n        });\n      }).filter(groupStructure => groupStructure.columnFields.length > 0);\n      const leftOverflow = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n      let columnIndex = firstColumnToRender;\n      const elements = visibleColumnGroupHeader.map(_ref4 => {\n        let {\n          groupId,\n          columnFields\n        } = _ref4;\n        const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n        const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n        const headerInfo = {\n          groupId,\n          width: columnFields.map(field => apiRef.current.getColumn(field).computedWidth).reduce((acc, val) => acc + val, 0),\n          fields: columnFields,\n          colIndex: columnIndex,\n          hasFocus,\n          tabIndex\n        };\n        columnIndex += columnFields.length;\n        return headerInfo;\n      });\n      headerToRender.push({\n        leftOverflow,\n        elements\n      });\n    }\n\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map((_ref5, groupIndex) => {\n          let {\n            groupId,\n            width,\n            fields,\n            colIndex,\n            hasFocus,\n            tabIndex\n          } = _ref5;\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            maxDepth: headerToRender.length,\n            height: headerHeight,\n            hasFocus: hasFocus,\n            tabIndex: tabIndex\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: function () {\n      let other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        style: rootStyle\n      }, other);\n    },\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    })\n  };\n};","map":{"version":3,"names":["_extends","React","ReactDOM","unstable_useForkRef","useForkRef","styled","useTheme","defaultMemoize","useGridPrivateApiContext","useGridRootProps","useGridApiEventHandler","GridColumnHeaderItem","getFirstColumnIndexToRender","getTotalHeaderHeight","useGridVisibleRows","getRenderableIndexes","GridColumnGroupHeader","jsx","_jsx","GridColumnHeaderRow","name","slot","overridesResolver","props","styles","columnHeaderRow","display","isUIEvent","event","target","useGridColumnHeaders","innerRef","innerRefProp","minColumnIndex","visibleColumns","sortColumnLookup","filterColumnLookup","columnPositions","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","densityFactor","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","theme","dragCol","setDragCol","useState","resizeCol","setResizeCol","apiRef","rootProps","useRef","handleInnerRef","renderContext","setRenderContext","prevRenderContext","prevScrollLeft","currentPage","totalHeaderHeight","columnHeaderHeight","headerHeight","Math","floor","useEffect","current","columnHeadersContainerElementRef","scrollLeft","getFirstColumnIndexToRenderRef","equalityCheck","a","b","every","key","updateInnerPosition","useCallback","nextRenderContext","firstRowToRender","lastRowToRender","firstIndex","firstRowIndex","lastIndex","lastRowIndex","minFirstIndex","maxLastIndex","rows","length","buffer","rowBuffer","firstColumnToRender","firstColumnIndex","columnBuffer","visibleRows","direction","offset","style","transform","useLayoutEffect","handleScroll","left","_prevRenderContext$cu","_prevRenderContext$cu2","lastColumnIndex","canUpdateInnerPosition","flushSync","handleColumnResizeStart","params","field","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumnsToRender","minFirstColumn","maxLastColumn","lastColumnToRender","min","renderedColumns","slice","getColumnHeaders","other","columnsToRender","columns","i","colDef","columnIndex","isFirstColumn","tabIndex","hasFocus","open","push","columnMenuOpen","filterItemsCounter","isDragging","colIndex","isResizing","role","ownerState","children","getColumnGroupHeaders","headerToRender","depth","_apiRef$current$unsta","_apiRef$current$unsta2","rowStructure","firstColumnFieldToRender","firstGroupToRender","unstable_getColumnGroupPath","firstGroupIndex","findIndex","groupId","columnFields","includes","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","map","groupStructure","filter","leftOverflow","indexOf","elements","headerInfo","width","getColumn","computedWidth","reduce","acc","val","fields","forEach","depthInfo","depthIndex","height","groupIndex","isLastColumn","maxDepth","rootStyle","minHeight","maxHeight","lineHeight","getRootProps","getInnerProps","ref"],"sources":["/home/fahiz/Brocamp Works/BASIC-CRUD_PROJECT-MERN/client/node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { styled, useTheme } from '@mui/system';\nimport { defaultMemoize } from 'reselect';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender, getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\nfunction isUIEvent(event) {\n  return !!event.target;\n}\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const theme = useTheme();\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]);\n\n  // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - direction * columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer, theme.direction]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n    if (!innerRef.current) {\n      return;\n    }\n\n    // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n    prevScrollLeft.current = left;\n\n    // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n    let canUpdateInnerPosition = false;\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    }\n\n    // Pass directly the render context to avoid waiting for the next render\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScroll);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    if (!nextRenderContext) {\n      return null;\n    }\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), colDef.field));\n    }\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _apiRef$current$unsta, _apiRef$current$unsta2;\n      const rowStructure = columnGroupsHeaderStructure[depth];\n      const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n      const firstGroupToRender = (_apiRef$current$unsta = apiRef.current.unstable_getColumnGroupPath(firstColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta : null;\n      const firstGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n      const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n      const lastGroupToRender = (_apiRef$current$unsta2 = apiRef.current.unstable_getColumnGroupPath(lastColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta2 : null;\n      const lastGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n      const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n        return _extends({}, groupStructure, {\n          columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n        });\n      }).filter(groupStructure => groupStructure.columnFields.length > 0);\n      const leftOverflow = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n      let columnIndex = firstColumnToRender;\n      const elements = visibleColumnGroupHeader.map(({\n        groupId,\n        columnFields\n      }) => {\n        const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n        const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n        const headerInfo = {\n          groupId,\n          width: columnFields.map(field => apiRef.current.getColumn(field).computedWidth).reduce((acc, val) => acc + val, 0),\n          fields: columnFields,\n          colIndex: columnIndex,\n          hasFocus,\n          tabIndex\n        };\n        columnIndex += columnFields.length;\n        return headerInfo;\n      });\n      headerToRender.push({\n        leftOverflow,\n        elements\n      });\n    }\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map(({\n          groupId,\n          width,\n          fields,\n          colIndex,\n          hasFocus,\n          tabIndex\n        }, groupIndex) => {\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            maxDepth: headerToRender.length,\n            height: headerHeight,\n            hasFocus: hasFocus,\n            tabIndex: tabIndex\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    })\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}