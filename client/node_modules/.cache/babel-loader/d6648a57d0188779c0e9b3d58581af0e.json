{"ast":null,"code":"import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const privateApiRef = useGridInitialization(inputApiRef, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridRowSelectionPreProcessors(privateApiRef, props);\n  useGridRowsPreProcessors(privateApiRef);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(rowSelectionStateInitializer, privateApiRef, props);\n  useGridInitializeState(columnsStateInitializer, privateApiRef, props);\n  useGridInitializeState(rowsStateInitializer, privateApiRef, props);\n  useGridInitializeState(editingStateInitializer, privateApiRef, props);\n  useGridInitializeState(focusStateInitializer, privateApiRef, props);\n  useGridInitializeState(sortingStateInitializer, privateApiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, privateApiRef, props);\n  useGridInitializeState(filterStateInitializer, privateApiRef, props);\n  useGridInitializeState(densityStateInitializer, privateApiRef, props);\n  useGridInitializeState(paginationStateInitializer, privateApiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, privateApiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, privateApiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, privateApiRef, props);\n  useGridKeyboardNavigation(privateApiRef, props);\n  useGridRowSelection(privateApiRef, props);\n  useGridColumns(privateApiRef, props);\n  useGridRows(privateApiRef, props);\n  useGridParamsApi(privateApiRef);\n  useGridColumnSpanning(privateApiRef);\n  useGridColumnGrouping(privateApiRef, props);\n  useGridEditing(privateApiRef, props);\n  useGridFocus(privateApiRef, props);\n  useGridPreferencesPanel(privateApiRef, props);\n  useGridFilter(privateApiRef, props);\n  useGridSorting(privateApiRef, props);\n  useGridDensity(privateApiRef, props);\n  useGridPagination(privateApiRef, props);\n  useGridRowsMeta(privateApiRef, props);\n  useGridScroll(privateApiRef, props);\n  useGridColumnMenu(privateApiRef);\n  useGridCsvExport(privateApiRef);\n  useGridPrintExport(privateApiRef, props);\n  useGridClipboard(privateApiRef);\n  useGridDimensions(privateApiRef, props);\n  useGridEvents(privateApiRef, props);\n  useGridStatePersistence(privateApiRef);\n  return privateApiRef;\n};","map":{"version":3,"names":["useGridInitialization","useGridInitializeState","useGridClipboard","columnMenuStateInitializer","useGridColumnMenu","useGridColumns","columnsStateInitializer","densityStateInitializer","useGridDensity","useGridCsvExport","useGridPrintExport","useGridFilter","filterStateInitializer","focusStateInitializer","useGridFocus","useGridKeyboardNavigation","useGridPagination","paginationStateInitializer","useGridPreferencesPanel","preferencePanelStateInitializer","useGridEditing","editingStateInitializer","useGridRows","rowsStateInitializer","useGridRowsPreProcessors","useGridParamsApi","rowSelectionStateInitializer","useGridRowSelection","useGridRowSelectionPreProcessors","useGridSorting","sortingStateInitializer","useGridScroll","useGridEvents","useGridDimensions","rowsMetaStateInitializer","useGridRowsMeta","useGridStatePersistence","useGridColumnSpanning","useGridColumnGrouping","columnGroupsStateInitializer","useDataGridComponent","inputApiRef","props","privateApiRef"],"sources":["/home/fahiz/Brocamp Works/BASIC-CRUD_PROJECT-MERN/client/node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js"],"sourcesContent":["import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const privateApiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(privateApiRef, props);\n  useGridRowsPreProcessors(privateApiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(rowSelectionStateInitializer, privateApiRef, props);\n  useGridInitializeState(columnsStateInitializer, privateApiRef, props);\n  useGridInitializeState(rowsStateInitializer, privateApiRef, props);\n  useGridInitializeState(editingStateInitializer, privateApiRef, props);\n  useGridInitializeState(focusStateInitializer, privateApiRef, props);\n  useGridInitializeState(sortingStateInitializer, privateApiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, privateApiRef, props);\n  useGridInitializeState(filterStateInitializer, privateApiRef, props);\n  useGridInitializeState(densityStateInitializer, privateApiRef, props);\n  useGridInitializeState(paginationStateInitializer, privateApiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, privateApiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, privateApiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, privateApiRef, props);\n  useGridKeyboardNavigation(privateApiRef, props);\n  useGridRowSelection(privateApiRef, props);\n  useGridColumns(privateApiRef, props);\n  useGridRows(privateApiRef, props);\n  useGridParamsApi(privateApiRef);\n  useGridColumnSpanning(privateApiRef);\n  useGridColumnGrouping(privateApiRef, props);\n  useGridEditing(privateApiRef, props);\n  useGridFocus(privateApiRef, props);\n  useGridPreferencesPanel(privateApiRef, props);\n  useGridFilter(privateApiRef, props);\n  useGridSorting(privateApiRef, props);\n  useGridDensity(privateApiRef, props);\n  useGridPagination(privateApiRef, props);\n  useGridRowsMeta(privateApiRef, props);\n  useGridScroll(privateApiRef, props);\n  useGridColumnMenu(privateApiRef);\n  useGridCsvExport(privateApiRef);\n  useGridPrintExport(privateApiRef, props);\n  useGridClipboard(privateApiRef);\n  useGridDimensions(privateApiRef, props);\n  useGridEvents(privateApiRef, props);\n  useGridStatePersistence(privateApiRef);\n  return privateApiRef;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}