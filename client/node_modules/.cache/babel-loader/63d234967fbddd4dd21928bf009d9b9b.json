{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$slotProps, _rootProps$slotProps2;\n\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.panel, props, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.basePopper, {\n    children: panelContent\n  }));\n});","map":{"version":3,"names":["_extends","React","gridColumnDefinitionsSelector","useGridSelector","gridPreferencePanelStateSelector","GridPreferencePanelsValue","useGridApiContext","useGridRootProps","jsx","_jsx","GridPreferencesPanel","forwardRef","props","ref","_preferencePanelState","_rootProps$slotProps","_rootProps$slotProps2","apiRef","columns","rootProps","preferencePanelState","panelContent","current","unstable_applyPipeProcessors","openedPanelValue","filters","slots","panel","as","basePopper","open","length","slotProps","children"],"sources":["/home/fahiz/Brocamp Works/BASIC-CRUD_PROJECT-MERN/client/node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$slotProps, _rootProps$slotProps2;\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open\n  }, (_rootProps$slotProps = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps.panel, props, (_rootProps$slotProps2 = rootProps.slotProps) == null ? void 0 : _rootProps$slotProps2.basePopper, {\n    children: panelContent\n  }));\n});"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,6BAAT,QAA8C,kDAA9C;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,gCAAT,QAAiD,mEAAjD;AACA,SAASC,yBAAT,QAA0C,iEAA1C;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,OAAO,MAAMC,oBAAoB,GAAG,aAAaT,KAAK,CAACU,UAAN,CAAiB,SAASD,oBAAT,CAA8BE,KAA9B,EAAqCC,GAArC,EAA0C;EAC1G,IAAIC,qBAAJ,EAA2BC,oBAA3B,EAAiDC,qBAAjD;;EACA,MAAMC,MAAM,GAAGX,iBAAiB,EAAhC;EACA,MAAMY,OAAO,GAAGf,eAAe,CAACc,MAAD,EAASf,6BAAT,CAA/B;EACA,MAAMiB,SAAS,GAAGZ,gBAAgB,EAAlC;EACA,MAAMa,oBAAoB,GAAGjB,eAAe,CAACc,MAAD,EAASb,gCAAT,CAA5C;EACA,MAAMiB,YAAY,GAAGJ,MAAM,CAACK,OAAP,CAAeC,4BAAf,CAA4C,iBAA5C,EAA+D,IAA/D,EAAqE,CAACT,qBAAqB,GAAGM,oBAAoB,CAACI,gBAA9C,KAAmE,IAAnE,GAA0EV,qBAA1E,GAAkGT,yBAAyB,CAACoB,OAAjM,CAArB;EACA,OAAO,aAAahB,IAAI,CAACU,SAAS,CAACO,KAAV,CAAgBC,KAAjB,EAAwB3B,QAAQ,CAAC;IACvDa,GAAG,EAAEA,GADkD;IAEvDe,EAAE,EAAET,SAAS,CAACO,KAAV,CAAgBG,UAFmC;IAGvDC,IAAI,EAAEZ,OAAO,CAACa,MAAR,GAAiB,CAAjB,IAAsBX,oBAAoB,CAACU;EAHM,CAAD,EAIrD,CAACf,oBAAoB,GAAGI,SAAS,CAACa,SAAlC,KAAgD,IAAhD,GAAuD,KAAK,CAA5D,GAAgEjB,oBAAoB,CAACY,KAJhC,EAIuCf,KAJvC,EAI8C,CAACI,qBAAqB,GAAGG,SAAS,CAACa,SAAnC,KAAiD,IAAjD,GAAwD,KAAK,CAA7D,GAAiEhB,qBAAqB,CAACa,UAJrI,EAIiJ;IACvMI,QAAQ,EAAEZ;EAD6L,CAJjJ,CAAhC,CAAxB;AAOD,CAdgD,CAA1C"},"metadata":{},"sourceType":"module"}